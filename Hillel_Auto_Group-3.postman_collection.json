{
	"info": {
		"_postman_id": "7e23e256-600b-4197-8df2-b2412cb4f9d8",
		"name": "Hillel_Auto_Group-3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22683195"
	},
	"item": [
		{
			"name": "Step-2 - Guest log in",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"pm.test(\"Response time is less than 600ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(600);",
							"});",
							"",
							"pm.test(\"Connection is present\", function () {",
							"    pm.response.to.have.header(\"Connection\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"timofeevayulia@ukr.net\",\n    \"password\": \"Bagira2013\",\n    \"remember\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api-logs",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api-logs"
					]
				}
			},
			"response": []
		},
		{
			"name": "Step-12 - Stage of creation of API",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 500\", function () {",
							"    pm.response.to.have.status(500);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Response time is less than 300ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(300);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"status\": \"ok\",\n    \"data\": {\n        \"userId\": 8483,\n        \"photoFilename\": \"default-user.png\",\n        \"distanceUnits\": \"km\",\n        \"currency\": \"usd\"\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/auth/signup",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"auth",
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "Step-15 - Sign in",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"pm.test(\"Set-Cookie is present\", function () {",
							"    pm.response.to.have.header(\"Set-Cookie\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"timofeevayulia@ukr.net\",\n    \"password\": \"Bagira2013\",\n    \"remember\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/auth/signin",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"auth",
						"signin"
					]
				}
			},
			"response": []
		},
		{
			"name": "Step-17 - Login with valid login details & Remember me option ON",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"",
							"pm.test(\"Content type in Header is correct\", function () {",
							"   pm.response.to.have.header(\"Content-Type\");",
							"   pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");",
							"});",
							"",
							"const schema = {",
							"\"type\": \"object\",",
							"  \"properties\": {",
							"    \"status\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"data\": {",
							"      \"type\": \"object\",",
							"      \"properties\": {",
							"        \"userId\": {",
							"          \"type\": \"integer\"",
							"        },",
							"        \"photoFilename\": {",
							"          \"type\": \"string\"",
							"        },",
							"        \"distanceUnits\": {",
							"          \"type\": \"string\"",
							"        },",
							"        \"currency\": {",
							"          \"type\": \"string\"",
							"        }",
							"      },",
							"      \"required\": [",
							"        \"userId\",",
							"        \"photoFilename\",",
							"        \"distanceUnits\",",
							"        \"currency\"",
							"      ]",
							"    }",
							"  },",
							"  \"required\": [",
							"    \"status\",",
							"    \"data\"",
							"  ]",
							"};",
							"",
							"pm.test(\"Validate schema\", () => {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							"var responseJSON;",
							"",
							"pm.test(\"Response contains a remember_me cookie\", function() {",
							"    pm.expect(pm.cookies.has('remember_me')).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "",
						"value": "",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"olhasamchuk7@gmail.com\",\n    \"password\": \"00X4Ka*7w1x8\",\n    \"remember\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/auth/signin",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"auth",
						"signin"
					]
				}
			},
			"response": []
		},
		{
			"name": "Step-19 - Password Reset with Valid Email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 3000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);",
							"});",
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"",
							"pm.test(\"Content type in Header is correct\", function () {",
							"   pm.response.to.have.header(\"Content-Type\");",
							"   pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");",
							"});",
							"",
							"pm.test(\"Status is set to ok\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"ok\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"olhasamchuk7@gmail.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/auth/resetPassword",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"auth",
						"resetPassword"
					]
				}
			},
			"response": []
		},
		{
			"name": "Step-20 - Password reset with invalid email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 3000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);",
							"});",
							"",
							"pm.test(\"Status 400 Bad Request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400]);",
							"});",
							"",
							"pm.test(\"Status is set to error\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"error\");",
							"});",
							"",
							"pm.test(\"Error message is correct\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Email is incorrect\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"blahblahblah\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/auth/resetPassword",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"auth",
						"resetPassword"
					]
				}
			},
			"response": []
		},
		{
			"name": "Step-23 - Add car",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 3000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);",
							"});",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"carBrandId\": 4,\n    \"carModelId\": 18,\n    \"mileage\": 200\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/cars",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "Step-27 - Add car and incorrect mileage",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"status\": \"ok\",\n    \"data\": {\n        \"id\": 24190,\n        \"carBrandId\": 4,\n        \"carModelId\": 18,\n        \"initialMileage\": 200,\n        \"updatedMileageAt\": \"2022-09-03T08:22:57.426Z\",\n        \"carCreatedAt\": \"2022-09-03T08:22:57.426Z\",\n        \"mileage\": 200,\n        \"brand\": \"Porsche\",\n        \"model\": \"Panamera\",\n        \"logo\": \"porsche.png\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/expenses?carId=24185",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"expenses"
					],
					"query": [
						{
							"key": "carId",
							"value": "24185"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Step-29 - Add an expense",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"status\");",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"status\": \"ok\",\n    \"data\": {\n        \"carId\": 24188,\n        \"reportedAt\": \"2022-09-03T00:00:00.000Z\",\n        \"liters\": 20,\n        \"id\": 9558,\n        \"mileage\": 150,\n        \"totalCost\": 100\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/expenses",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"expenses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Step-31 - Incorrect data entry in the \"Mileage\" field",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"status\");",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Response time is less than 500ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(500);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"carId\": 24185,\n    \"reportedAt\": \"2022-09-03T00:00:00.000Z\",\n    \"mileage\": 500,\n    \"liters\": 50,\n    \"totalCost\": 600\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/expenses",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"expenses"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "apikey"
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "URL",
			"value": "https://qauto2.forstudy.space",
			"type": "string"
		}
	]
}